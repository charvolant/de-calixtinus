- name: Create de-calixtinus group
  ansible.builtin.group:
    name: "{{ dcx_group }}"
    state: present

- name: Create de-calixtinus user
  ansible.builtin.user:
    name: "{{ dcx_user }}"
    groups: "{{ dcx_group }}"
    comment: "User for de-calixtinus server"
    state: present

- name: Ensure archiving tools are present
  yum:
    name:
      - gzip
      - tar
      - libicu
    state: present

- name: Ensure unicode icu library is present
  yum:
    name:
      - libicu
    state: present
  when: install_icu

- name: Get distribution from s3
  ansible.builtin.get_url:
    url: "https://{{ dcx_dist_bucket }}.s3.ap-southeast-2.amazonaws.com/build/de-calixtinus-{{ dcx_version }}.tar.gz"
    dest: /tmp/de-calixtinus.tar.gz
    force: true

- name: Create the install directory
  ansible.builtin.file:
    path: "{{ dcx_dir }}"
    owner: "{{ dcx_user }}"
    group: "{{ dcx_group }}"
    state: directory

- name: Install distribution
  ansible.builtin.unarchive:
    src: /tmp/de-calixtinus.tar.gz
    dest: "{{ dcx_dir }}"
    owner: "{{ dcx_user }}"
    group: "{{ dcx_group }}"
    copy: false

- name: Ensure executable files are executable
  ansible.builtin.file:
    path: "{{ dcx_dir }}/bin/{{ item }}"
    mode: ug+x
  loop:
    - camino-server-exe
    - camino-planner-exe
    - camino-map-exe
    - generate-static-exe

- name: Create the configuration
  ansible.builtin.template:
    src: templates/config.yaml.j2
    dest: "{{ dcx_dir }}/lib/config.yaml"

- name: Create the log directory
  ansible.builtin.file:
    path: "{{ dcx_log_dir }}"
    owner: "{{ dcx_user }}"
    group: "{{ dcx_group }}"
    state: directory

- name: Create the run directory
  ansible.builtin.file:
    path: "{{ dcx_run_dir }}"
    owner: "{{ dcx_user }}"
    group: "{{ dcx_group }}"
    state: directory

- name: Create the var directory
  ansible.builtin.file:
    path: "{{ dcx_var_dir }}"
    owner: "{{ dcx_user }}"
    group: "{{ dcx_group }}"
    state: directory

- name: Create systemd services
  ansible.builtin.template:
    src: templates/de-calixtinus.service.j2
    dest: /usr/lib/systemd/system/de-calixtinus.service

- name: Create log rotation
  ansible.builtin.template:
    src: templates/de-calixtinus.logrotate.j2
    dest: /etc/logrotate.d/de-calixtinus

- name: Enable and start service
  ansible.builtin.systemd:
    name: de-calixtinus
    daemon_reload: true
    enabled: true
    state: restarted